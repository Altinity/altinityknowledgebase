<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Altinity Beta Knowledgebase â€“ Kafka</title>
    <link>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/</link>
    <description>Recent content in Kafka on Altinity Beta Knowledgebase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Altinity-Kb-Integrations: Adjusting librdkafka settings</title>
      <link>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-adjusting-librdkafka-settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-adjusting-librdkafka-settings/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;To set rdkafka options - add to &lt;code&gt;&amp;lt;kafka&amp;gt;&lt;/code&gt; section in &lt;code&gt;config.xml&lt;/code&gt; or preferably use a separate file in &lt;code&gt;config.d/&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md&#34; target=&#34;_blank&#34;&gt;https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some random example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;&amp;lt;kafka&amp;gt;
    &amp;lt;max_poll_interval_ms&amp;gt;60000&amp;lt;/max_poll_interval_ms&amp;gt;
    &amp;lt;session_timeout_ms&amp;gt;60000&amp;lt;/session_timeout_ms&amp;gt;
    &amp;lt;heartbeat_interval_ms&amp;gt;10000&amp;lt;/heartbeat_interval_ms&amp;gt;
    &amp;lt;reconnect_backoff_ms&amp;gt;5000&amp;lt;/reconnect_backoff_ms&amp;gt;
    &amp;lt;reconnect_backoff_max_ms&amp;gt;60000&amp;lt;/reconnect_backoff_max_ms&amp;gt;
    &amp;lt;request_timeout_ms&amp;gt;20000&amp;lt;/request_timeout_ms&amp;gt;
    &amp;lt;retry_backoff_ms&amp;gt;500&amp;lt;/retry_backoff_ms&amp;gt;
    &amp;lt;message_max_bytes&amp;gt;20971520&amp;lt;/message_max_bytes&amp;gt;
    &amp;lt;debug&amp;gt;all&amp;lt;/debug&amp;gt;&amp;lt;!-- only to get the errors --&amp;gt;
    &amp;lt;security_protocol&amp;gt;SSL&amp;lt;/security_protocol&amp;gt;
    &amp;lt;ssl_ca_location&amp;gt;/etc/clickhouse-server/ssl/kafka-ca-qa.crt&amp;lt;/ssl_ca_location&amp;gt;
    &amp;lt;ssl_certificate_location&amp;gt;/etc/clickhouse-server/ssl/client_clickhouse_client.pem&amp;lt;/ssl_certificate_location&amp;gt;
    &amp;lt;ssl_key_location&amp;gt;/etc/clickhouse-server/ssl/client_clickhouse_client.key&amp;lt;/ssl_key_location&amp;gt;
    &amp;lt;ssl_key_password&amp;gt;pass&amp;lt;/ssl_key_password&amp;gt;
&amp;lt;/kafka&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;authentication--connectivity-a-idadjustinglibrdkafkasettings-authenticationconnectivitya&#34;&gt;Authentication / connectivity &lt;a id=&#34;Adjustinglibrdkafkasettings-Authentication/connectivity&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;amazon-msk-a-idadjustinglibrdkafkasettings-amazonmska&#34;&gt;Amazon MSK &lt;a id=&#34;Adjustinglibrdkafkasettings-AmazonMSK&#34;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;&amp;lt;yandex&amp;gt;
  &amp;lt;kafka&amp;gt;
    &amp;lt;security_protocol&amp;gt;sasl_ssl&amp;lt;/security_protocol&amp;gt;
    &amp;lt;sasl_username&amp;gt;root&amp;lt;/sasl_username&amp;gt;
    &amp;lt;sasl_password&amp;gt;toor&amp;lt;/sasl_password&amp;gt;
  &amp;lt;/kafka&amp;gt;
&amp;lt;/yandex&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://leftjoin.ru/all/clickhouse-as-a-consumer-to-amazon-msk/&#34; target=&#34;_blank&#34;&gt;https://leftjoin.ru/all/clickhouse-as-a-consumer-to-amazon-msk/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;inline-kafka-certs-a-idadjustinglibrdkafkasettings-inlinekafkacertsa&#34;&gt;Inline Kafka certs &lt;a id=&#34;Adjustinglibrdkafkasettings-Inlinekafkacerts&#34;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To connect to some Kafka cloud services you may need to use certificates.&lt;/p&gt;
&lt;p&gt;If needed they can be converted to pem format and inlined into ClickHouse config.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;&amp;lt;kafka&amp;gt;
&amp;lt;ssl_key_pem&amp;gt;&amp;lt;![CDATA[
  RSA Private-Key: (3072 bit, 2 primes)
    ....
-----BEGIN RSA PRIVATE KEY-----
...
-----END RSA PRIVATE KEY-----
]]&amp;gt;&amp;lt;/ssl_key_pem&amp;gt;
&amp;lt;ssl_certificate_pem&amp;gt;&amp;lt;![CDATA[
-----BEGIN CERTIFICATE-----
...
-----END CERTIFICATE-----
]]&amp;gt;&amp;lt;/ssl_certificate_pem&amp;gt;
&amp;lt;/kafka&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See also&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://help.aiven.io/en/articles/489572-getting-started-with-aiven-kafka&#34; target=&#34;_blank&#34;&gt;https://help.aiven.io/en/articles/489572-getting-started-with-aiven-kafka&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/991758/how-to-get-pem-file-from-key-and-crt-files&#34; target=&#34;_blank&#34;&gt;https://stackoverflow.com/questions/991758/how-to-get-pem-file-from-key-and-crt-files&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;azure-event-hub-a-idadjustinglibrdkafkasettings-azureeventhuba&#34;&gt;Azure Event Hub &lt;a id=&#34;Adjustinglibrdkafkasettings-AzureEventHub&#34;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/issues/12609&#34; target=&#34;_blank&#34;&gt;https://github.com/ClickHouse/ClickHouse/issues/12609&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;kerberos-a-idadjustinglibrdkafkasettings-kerberosa&#34;&gt;Kerberos &lt;a id=&#34;Adjustinglibrdkafkasettings-Kerberos&#34;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://clickhouse.tech/docs/en/engines/table-engines/integrations/kafka/#kafka-kerberos-support&#34; target=&#34;_blank&#34;&gt;https://clickhouse.tech/docs/en/engines/table-engines/integrations/kafka/#kafka-kerberos-support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/blob/master/tests/integration/test_storage_kerberized_kafka/configs/kafka.xml&#34; target=&#34;_blank&#34;&gt;https://github.com/ClickHouse/ClickHouse/blob/master/tests/integration/test_storage_kerberized_kafka/configs/kafka.xml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;  &amp;lt;!-- Kerberos-aware Kafka --&amp;gt;
  &amp;lt;kafka&amp;gt;
    &amp;lt;security_protocol&amp;gt;SASL_PLAINTEXT&amp;lt;/security_protocol&amp;gt;
    &amp;lt;sasl_kerberos_keytab&amp;gt;/home/kafkauser/kafkauser.keytab&amp;lt;/sasl_kerberos_keytab&amp;gt;
    &amp;lt;sasl_kerberos_principal&amp;gt;kafkauser/kafkahost@EXAMPLE.COM&amp;lt;/sasl_kerberos_principal&amp;gt;
  &amp;lt;/kafka&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;confluent-cloud&#34;&gt;confluent cloud&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;    &amp;lt;yandex&amp;gt;
        &amp;lt;kafka&amp;gt;
        &amp;lt;auto_offset_reset&amp;gt;smallest&amp;lt;/auto_offset_reset&amp;gt;
        &amp;lt;security_protocol&amp;gt;SASL_SSL&amp;lt;/security_protocol&amp;gt;
        &amp;lt;ssl_endpoint_identification_algorithm&amp;gt;https&amp;lt;/ssl_endpoint_identification_algorithm&amp;gt;
        &amp;lt;sasl_mechanism&amp;gt;PLAIN&amp;lt;/sasl_mechanism&amp;gt;
        &amp;lt;sasl_username&amp;gt;username&amp;lt;/sasl_username&amp;gt;
        &amp;lt;sasl_password&amp;gt;password&amp;lt;/sasl_password&amp;gt;
        &amp;lt;ssl_ca_location&amp;gt;probe&amp;lt;/ssl_ca_location&amp;gt;
        &amp;lt;!-- 
          &amp;lt;ssl_ca_location&amp;gt;/path/to/cert.pem&amp;lt;/ssl_ca_location&amp;gt;         
        --&amp;gt; 
        &amp;lt;/kafka&amp;gt;
    &amp;lt;/yandex&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://docs.confluent.io/cloud/current/client-apps/config-client.html&#34; target=&#34;_blank&#34;&gt;https://docs.confluent.io/cloud/current/client-apps/config-client.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-to-test-connection-settings&#34;&gt;How to test connection settings&lt;/h2&gt;
&lt;p&gt;Use kafkacat utility - it internally uses same library to access Kafla as clickhouse itself and allows easily to test different settings&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;kafkacat -b my_broker:9092 -C -o -10 -t my_topic \
   -X security.protocol=SASL_SSL  \
   -X sasl.mechanisms=PLAIN \
   -X sasl.username=uerName \
   -X sasl.password=Password 
   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Altinity-Kb-Integrations: Error handling</title>
      <link>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/error-handling/</guid>
      <description>
        
        
        &lt;h2 id=&#34;pre-216&#34;&gt;Pre 21.6&lt;/h2&gt;
&lt;p&gt;There are couple options:&lt;br&gt;
Certain formats which has schema in built in them (like JSONEachRow) could silently skip any unexpected fields after enabling setting &lt;code&gt;input_format_skip_unknown_fields&lt;/code&gt;&lt;br&gt;
It&amp;rsquo;s also possible to skip up to N malformed messages for each block, with used setting &lt;code&gt;kafka_skip_broken_messages&lt;/code&gt; but it&amp;rsquo;s also does not support all possible formats.&lt;/p&gt;
&lt;h2 id=&#34;after-216&#34;&gt;After 21.6&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s possible to stream messages which could not be parsed, this behavior could be enabled via setting: &lt;code&gt;kafka_handle_error_mode=&#39;stream&#39;&lt;/code&gt; and clickhouse wil write error and message from Kafka itself to two new virtual columns: &lt;code&gt;_error, _raw_message&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So you can create another Materialized View which would collect to a separate table all errors happening while parsing with all important information like offset and content of message.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kafka_engine&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Int64&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ENGINE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Kafka&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SETTINGS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kafka_broker_list&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;kafka:9092&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kafka_topic_list&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kafka_group_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;clickhouse&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kafka_format&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;JSONEachRow&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kafka_handle_error_mode&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;stream&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MATERIALIZED&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VIEW&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kafka_errors&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Int64&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;offset&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Int64&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;raw&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ENGINE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MergeTree&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;offset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SETTINGS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;index_granularity&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8192&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_topic&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_partition&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_offset&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;offset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_raw_message&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;raw&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_error&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kafka_engine&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_error&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../.gitbook/assets/untitled-2021-08-05-1027.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;{% embed url=&amp;ldquo;&lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/pull/20249&#34;&gt;https://github.com/ClickHouse/ClickHouse/pull/20249&lt;/a&gt;#issuecomment-779054737&amp;rdquo; %}&lt;/p&gt;
&lt;p&gt;{% embed url=&amp;ldquo;&lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/pull/21850%22&#34;&gt;https://github.com/ClickHouse/ClickHouse/pull/21850&amp;quot;&lt;/a&gt; %}&lt;/p&gt;
&lt;p&gt;{% embed url=&amp;ldquo;&lt;a href=&#34;https://altinity.com/blog/clickhouse-kafka-engine-faq%22&#34;&gt;https://altinity.com/blog/clickhouse-kafka-engine-faq&amp;quot;&lt;/a&gt; %}&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Altinity-Kb-Integrations: Exactly once semantics</title>
      <link>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-exactly-once-semantics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-exactly-once-semantics/</guid>
      <description>
        
        
        &lt;p&gt;EOS consumer (isolation.level=read_committed) is enabled by default since librdkafka 1.2.0, so for ClickHouse - since 20.2&lt;/p&gt;
&lt;p&gt;See:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/edenhill/librdkafka/commit/6b2a1552ac2a4ea09d915015183f268dd2df96e6&#34; target=&#34;_blank&#34;&gt;edenhill/librdkafka@6b2a155&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/commit/9de5dffb5c97eb93545ae25eaf87ec195a590148&#34; target=&#34;_blank&#34;&gt;9de5dff&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There was a report recently that it was giving some duplicates &lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/issues/18668&#34; target=&#34;_blank&#34;&gt;#18668&lt;/a&gt; and in should be fixed in 21.2.&lt;/p&gt;
&lt;p&gt;BUT: while EOS semantics will guarantee you that no duplicates will happen on the Kafka side (i.e. even if you produce the same messages few times it will be consumed once), but ClickHouse as a Kafka client can currently guarantee only at-least-once. And in some corner cases (connection lost etc) you can get duplicates.&lt;/p&gt;
&lt;p&gt;We need to have something like transactions on ClickHouse side to be able to avoid that. Adding something like simple transactions is in plans for Y2021.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Altinity-Kb-Integrations: Kafka main parsing loop</title>
      <link>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-kafka-main-parsing-loop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-kafka-main-parsing-loop/</guid>
      <description>
        
        
        &lt;p&gt;One of the threads from scheduled_pool (pre 20.9) / &lt;code&gt;background_message_broker_schedule_pool&lt;/code&gt; (after 20.9) do that in infinite loop:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Batch poll (time limit: &lt;code&gt;kafka_poll_timeout_ms&lt;/code&gt; 500ms, messages limit: &lt;code&gt;kafka_poll_max_batch_size&lt;/code&gt; 65536)&lt;/li&gt;
&lt;li&gt;Parse messages.&lt;/li&gt;
&lt;li&gt;If we don&amp;rsquo;t have enough data (rows limit: &lt;code&gt;kafka_max_block_size&lt;/code&gt; 1048576) or time limit reached (&lt;code&gt;kafka_flush_interval_ms&lt;/code&gt; 7500ms) - continue polling (goto p.1)&lt;/li&gt;
&lt;li&gt;Write a collected block of data to MV&lt;/li&gt;
&lt;li&gt;Do commit (commit after write = at-least-once).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;On any error, during that process, Kafka client is restarted (leading to rebalancing - leave the group and get back in few seconds).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../.gitbook/assets/128942286.png&#34; alt=&#34;Kafka batching&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;important-settings-a-idkafkamainparsingloop-importantsettingsa&#34;&gt;Important settings &lt;a id=&#34;Kafkamainparsingloop-Importantsettings&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These usually should not be adjusted:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kafka_poll_max_batch_size&lt;/code&gt; = max_block_size (65536)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kafka_poll_timeout_ms&lt;/code&gt; = stream_poll_timeout_ms (500ms)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You may want to adjust those depending on your scenario:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kafka_flush_interval_ms&lt;/code&gt; = stream_poll_timeout_ms (7500ms)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kafka_max_block_size&lt;/code&gt; = min_insert_block_size / kafka_num_consumers (for the single consumer: 1048576)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;see-also-a-idkafkamainparsingloop-seealsoa&#34;&gt;See also &lt;a id=&#34;Kafkamainparsingloop-Seealso&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/pull/11388&#34; target=&#34;_blank&#34;&gt;https://github.com/ClickHouse/ClickHouse/pull/11388&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Altinity-Kb-Integrations: Kafka parallel consuming</title>
      <link>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-kafka-parallel-consuming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-kafka-parallel-consuming/</guid>
      <description>
        
        
        &lt;p&gt;For very large topics when you need more parallelism (especially on the insert side) you may use several tables with the same pipeline (pre 20.9) or enable &lt;code&gt;kafka_thread_per_consumer&lt;/code&gt; (after 20.9).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;kafka_num_consumers = N,
kafka_thread_per_consumer=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the inserts will happen in parallel (without that setting inserts happen linearly)&lt;/li&gt;
&lt;li&gt;enough partitions are needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before increasing &lt;code&gt;kafka_num_consumers&lt;/code&gt; with keeping &lt;code&gt;kafka_thread_per_consumer=0&lt;/code&gt; may improve consumption &amp;amp; parsing speed, but flushing &amp;amp; committing still happens by a single thread there (so inserts are linear).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Altinity-Kb-Integrations: Rewind / fast-forward / replay</title>
      <link>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-rewind-fast-forward-replay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-rewind-fast-forward-replay/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;Step 1: Detach Kafka tables in ClickHouse&lt;/li&gt;
&lt;li&gt;Step 2: &lt;code&gt;kafka-consumer-groups.sh --bootstrap-server kafka:9092 --topic topic:0,1,2 --group id1 --reset-offsets --to-latest --execute&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;More samples: &lt;a href=&#34;https://gist.github.com/filimonov/1646259d18b911d7a1e8745d6411c0cc&#34; target=&#34;_blank&#34;&gt;https://gist.github.com/filimonov/1646259d18b911d7a1e8745d6411c0cc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Step: Attach Kafka tables back&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See also these configuration settings:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;&amp;lt;kafka&amp;gt;
  &amp;lt;auto_offset_reset&amp;gt;smallest&amp;lt;/auto_offset_reset&amp;gt;
&amp;lt;/kafka&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Altinity-Kb-Integrations: SELECTs from engine=Kafka</title>
      <link>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-selects-from-engine-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beta.kb.altinity.com/altinity-kb-integrations/altinity-kb-kafka/altinity-kb-selects-from-engine-kafka/</guid>
      <description>
        
        
        &lt;h2 id=&#34;question&#34;&gt;Question&lt;/h2&gt;
&lt;p&gt;What will happen, if we would run SELECT query from working Kafka table with MV attached? Would data showed in SELECT query appear later in MV destination table?&lt;/p&gt;
&lt;h2 id=&#34;answer&#34;&gt;Answer&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Most likely SELECT query would show nothing.&lt;/li&gt;
&lt;li&gt;If you lucky enough and something would show up, those rows &lt;strong&gt;wouldn&amp;rsquo;t appear&lt;/strong&gt; in MV destination table.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So it&amp;rsquo;s not recommended to run SELECT queries on working Kafka tables.&lt;/p&gt;
&lt;p&gt;In case of debug it&amp;rsquo;s possible to use another Kafka table with different &lt;code&gt;consumer_group&lt;/code&gt;, so it wouldn&amp;rsquo;t affect your main pipeline.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
