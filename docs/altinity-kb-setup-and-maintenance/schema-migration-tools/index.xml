<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Altinity Beta Knowledgebase – Schema migration tools for ClickHouse</title>
    <link>http://beta.kb.altinity.com/altinity-kb-setup-and-maintenance/schema-migration-tools/</link>
    <description>Recent content in Schema migration tools for ClickHouse on Altinity Beta Knowledgebase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="http://beta.kb.altinity.com/altinity-kb-setup-and-maintenance/schema-migration-tools/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Altinity-Kb-Setup-and-Maintenance: golang-migrate</title>
      <link>http://beta.kb.altinity.com/altinity-kb-setup-and-maintenance/schema-migration-tools/golang-migrate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beta.kb.altinity.com/altinity-kb-setup-and-maintenance/schema-migration-tools/golang-migrate/</guid>
      <description>
        
        
        &lt;h3 id=&#34;migrate&#34;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;migrate&lt;/code&gt; is a simple schema migration tool written in golang. No external dependencies are required (like interpreter, jre), only one platform-specific executable. &lt;a href=&#34;https://github.com/golang-migrate/migrate&#34; target=&#34;_blank&#34;&gt;golang-migrate/migrate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;migrate&lt;/code&gt; supports several databases, including ClickHouse (support was introduced by &lt;a href=&#34;https://github.com/kshvakov&#34; target=&#34;_blank&#34;&gt;@kshvakov&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To store information about migrations state &lt;code&gt;migrate&lt;/code&gt; creates one additional table in target database, by default that table is called &lt;code&gt;schema_migrations&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&#34;install&#34;&gt;Install&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/golang-migrate/migrate/releases&#34; target=&#34;_blank&#34;&gt;download&lt;/a&gt; the &lt;code&gt;migrate&lt;/code&gt; executable for your platform and put it to the folder listed in your %PATH.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;---
title: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;on Linux:&amp;#34;&lt;/span&gt;
linkTitle: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;on Linux:&amp;#34;&lt;/span&gt;
description: &amp;gt;
    on Linux:
---
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#wget https://github.com/golang-migrate/migrate/releases/download/v3.2.0/migrate.linux-amd64.tar.gz&lt;/span&gt;
wget https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz
tar -xzf migrate.linux-amd64.tar.gz
mkdir -p ~/bin
mv migrate.linux-amd64 ~/bin/migrate
rm migrate.linux-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;sample-usage&#34;&gt;Sample usage&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir migrations
&lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;create table test(id UInt8) Engine = Memory;&amp;#39;&lt;/span&gt; &amp;gt; migrations/000001_my_database_init.up.sql
&lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;DROP TABLE test;&amp;#39;&lt;/span&gt; &amp;gt; migrations/000001_my_database_init.down.sql

---
title: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;you can also auto-create file with new migrations with automatic numbering like that:&amp;#34;&lt;/span&gt;
linkTitle: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;you can also auto-create file with new migrations with automatic numbering like that:&amp;#34;&lt;/span&gt;
description: &amp;gt;
    you can also auto-create file with new migrations with automatic numbering like that:
---
---
title: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;gt; migrate create -dir migrations -seq -digits 6 -ext sql my_database_init&amp;#34;&lt;/span&gt;
linkTitle: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;gt; migrate create -dir migrations -seq -digits 6 -ext sql my_database_init&amp;#34;&lt;/span&gt;
description: &amp;gt;
    &amp;gt; migrate create -dir migrations -seq -digits &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt; -ext sql my_database_init
---
---
title: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;edit migrations/000001_my_database_init.up.sql &amp;amp; migrations/000001_my_database_init.down.sql&amp;#34;&lt;/span&gt;
linkTitle: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;edit migrations/000001_my_database_init.up.sql &amp;amp; migrations/000001_my_database_init.down.sql&amp;#34;&lt;/span&gt;
description: &amp;gt;
    edit migrations/000001_my_database_init.up.sql &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt; migrations/000001_my_database_init.down.sql
---
➜ migrate -database &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;clickhouse://localhost:9000&amp;#39;&lt;/span&gt; -path ./migrations up
1/u my_database_init &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;6.502974ms&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;

➜ migrate -database &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;clickhouse://localhost:9000&amp;#39;&lt;/span&gt; -path ./migrations down
1/d my_database_init &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;2.164394ms&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;

---
title: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;clears the database (use carefully - will not ask any confirmations)&amp;#34;&lt;/span&gt;
linkTitle: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;clears the database (use carefully - will not ask any confirmations)&amp;#34;&lt;/span&gt;
description: &amp;gt;
    clears the database &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;use carefully - will not ask any confirmations&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
---
➜ migrate -database &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;clickhouse://localhost:9000&amp;#39;&lt;/span&gt; -path ./migrations drop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;connection-string-format&#34;&gt;Connection string format&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;clickhouse://host:port?username=user&amp;amp;password=qwerty&amp;amp;database=clicks&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;URL Query&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;x-migrations-table&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Name of the migrations table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;database&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The name of the database to connect to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;username&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The user to sign in as&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;password&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The user&amp;rsquo;s password&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;host&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The host to connect to.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;port&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;The port to bind to.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;secure&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;to use a secure connection (for self-signed also add &lt;code&gt;skip_verify=1&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;replicated--distributed--cluster-environments&#34;&gt;Replicated / Distributed / Cluster environments&lt;/h4&gt;
&lt;p&gt;By default &lt;code&gt;migrate&lt;/code&gt; create table &lt;code&gt;schema_migrations&lt;/code&gt; with the following structure&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;schema_migrations&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;UInt32&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dirty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;UInt8&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sequence&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;UInt64&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ENGINE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TinyLog&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That allows storing version of schema locally.&lt;/p&gt;
&lt;p&gt;If you need to use &lt;code&gt;migrate&lt;/code&gt; in some multi server environment (replicated / cluster) you should create &lt;code&gt;schema_migrations&lt;/code&gt; manually with the same structure and with the appropriate Engine (Replicated / Distributed), otherwise, other servers will not know the version of the DB schema. As an alternative you can force the current version number on another server manually, like that:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;migrate -database &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;clickhouse://localhost:9000&amp;#39;&lt;/span&gt; -path ./migrations force &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;123456&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# force version 123456&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;known-issues&#34;&gt;Known issues&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;could not load time location: unknown time zone Europe/Moscow in line 0:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s happens due of missing tzdata package in migrate/migrate docker image of golang-migrate.
There is 2 possible solutions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You can build your own golang-migrate image from official with tzdata package.&lt;/li&gt;
&lt;li&gt;If you using it as part of your CI you can add installing tzdata package as one of step in ci before using golang-migrate.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Related GitHub issues:
&lt;a href=&#34;https://github.com/golang-migrate/migrate/issues/494&#34; target=&#34;_blank&#34;&gt;https://github.com/golang-migrate/migrate/issues/494&lt;/a&gt;
&lt;a href=&#34;https://github.com/golang-migrate/migrate/issues/201&#34; target=&#34;_blank&#34;&gt;https://github.com/golang-migrate/migrate/issues/201&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Using database name in &lt;code&gt;x-migrations-table&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creates table with &lt;code&gt;database.table&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;When running migrations migrate actually uses database from query settings and encapsulate &lt;code&gt;database.table&lt;/code&gt; as table name: ``other_database.`database.table```&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
