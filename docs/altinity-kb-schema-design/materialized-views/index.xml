<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Altinity Beta Knowledgebase â€“ MATERIALIZED VIEWS</title>
    <link>http://beta.kb.altinity.com/altinity-kb-schema-design/materialized-views/</link>
    <description>Recent content in MATERIALIZED VIEWS on Altinity Beta Knowledgebase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="http://beta.kb.altinity.com/altinity-kb-schema-design/materialized-views/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Altinity-Kb-Schema-Design: Backfill/populate MV in a controlled manner</title>
      <link>http://beta.kb.altinity.com/altinity-kb-schema-design/materialized-views/backfill-populate-mv-in-a-controlled-manner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://beta.kb.altinity.com/altinity-kb-schema-design/materialized-views/backfill-populate-mv-in-a-controlled-manner/</guid>
      <description>
        
        
        &lt;p&gt;Q. How to populate MV create with TO syntax? INSERT INTO mv SELECT * FROM huge_table? Will it work if the source table has billions of rows?&lt;/p&gt;
&lt;p&gt;A. single huge &lt;code&gt;insert ... select ...&lt;/code&gt; actually will work, but it will take A LOT of time, and during that time lot of bad things can happen (lack of disk space, hard restart etc). Because of that, it&amp;rsquo;s better to do such backfill in a more controlled manner and in smaller pieces.&lt;/p&gt;
&lt;p&gt;One of the best options is to fill one partition at a time, and if it breaks you can drop the partition and refill it.&lt;/p&gt;
&lt;p&gt;If you need to construct a single partition from several sources - then the following approach may be the best.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;CREATE TABLE mv_import AS mv;
INSERT INTO mv_import SELECT * FROM huge_table WHERE toYYYYMM(ts) = 202105; 
/* or other partition expresssion*/

/* that insert select may take a lot of time, if something bad will happen
  during that - just truncate mv_import and restart the process */

/* after successful loading of mv_import do*/
ALTER TABLE mv ATTACH PARTITION ID &amp;#39;202105&amp;#39; FROM  mv_import;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See also &lt;a href=&#34;https://clickhouse.tech/docs/en/sql-reference/statements/alter/partition/&#34;&gt;https://clickhouse.tech/docs/en/sql-reference/statements/alter/partition/&lt;/a&gt;#alter_attach-partition-from&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
